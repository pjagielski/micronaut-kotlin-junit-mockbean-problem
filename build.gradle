plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "org.jetbrains.kotlin.kapt" version "1.3.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.21"
}

apply plugin:"application"

ext {
    micronautVersion = "1.0.4"
    kotlinVersion = '1.3.21'
    exposedVersion = '0.12.1'
    springSecurityCryptoVersion = '4.2.5.RELEASE'
    postgresVersion = '42.2.4'
    junitVersion = '5.3.1'
    assertjVersion = '3.11.1'
    mockitoKotlinVersion = '1.6.0'
    javafakerVersion = '0.16'
}

version "0.1"
group "micronaut.kotlin.jwt"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.4'
    }
}

dependencies {
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"

    compile "io.micronaut:micronaut-spring"
    compile "io.micronaut:micronaut-security-jwt"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut.configuration:micronaut-jdbc-hikari"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut:micronaut-runtime"
    compile "org.jetbrains.exposed:exposed:$exposedVersion"
    compile "org.jetbrains.exposed:spring-transaction:$exposedVersion"
    compile "org.springframework.security:spring-security-crypto:$springSecurityCryptoVersion"


    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "org.postgresql:postgresql:$postgresVersion"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7"

    testCompile "junit:junit:4.12"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.assertj:assertj-core:$assertjVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.1"
    testCompile "io.micronaut.test:micronaut-test-junit5:1.0.2"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    testCompile "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"

    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.1"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "io.realworld.Application"

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}
